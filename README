

                   The Walrus Graph Visualization Tool

                             version 0.1

                             ___ __, 2001

                         (c) 2001 CAIDA/UCSD

          (http://www.caida.org/tools/visualization/walrus/)
                   Young Hyun <youngh@caida.org>


- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
DESCRIPTION

Walrus is a tool for visualizing large directed graphs, where large is on
the order of a million nodes, and about as many links. It is applicable
mainly to graphs that are tree-like by having a meaningful spanning tree
and by including a relatively small number of non-tree links. It overcomes
the difficulties of visualizing large graphs in two ways. First, the
computational cost of layout is overcome by considering only the spanning
tree in the calculations, since techniques for tree layout scale better
than those for general graph layout. Second, the problem of displaying a
large graph on a small screen is overcome by making use of hyperbolic
geometry. Hyperbolic geometry provides a Focus+Context view which resembles
a continuous fish-eye distortion in three dimensions. It allows the user to
examine the fine details of a small area while always having a view of the
whole graph available as a frame of reference. The user examines the whole
graph by interactively moving the focus.


- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
REQUIREMENTS

Walrus requires Java3D v1.2.1 (or later) and JDK 1.3.0 (or later).  

Java3D:  http://java.sun.com/products/java-media/3D/index.html
JDK:     http://java.sun.com/j2se/

A hardware-accelerated graphics card is a must.  Software-based OpenGL
packages like Mesa may produce poor results.  Also, you'll want a fairly
speedy machine with lots of memory (128MB is probably a minimum; 256MB or
more is better; 512MB for a million-node graph).

Walrus was developed and tested on a Sun Ultra 60 with an Elite 3D card
and 512MB of RAM, running Solaris 7, a box graciously donated by Sun.


- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
DOCUMENTATION

See the 'docs' subdirectory for documentation.


- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
QUICK START

Do the following to try out Walrus:

1. Execute: java -cp antlrall-mod.jar:libsea.jar:walrus.jar H3Main

2. Select the menu item File->Open (that is, Open under the File menu),
   and load the file 'champagne.graph' in the 'samples' subdirectory.
   The window will be blank while the file loads.  This graph has
   9175 nodes, 9174 tree links, and 6345 nontree links.  This should
   load in a few seconds, but it can take several minutes to load some
   graphs.

3. Select Rendering->Start, once the Walrus logo reappears.

4. Click and drag with the left mouse button to rotate the display.
   It is normal for parts of the graph to disappear during rotations.
   Walrus uses an adaptive rendering algorithm that tries to maintain
   a given framerate (currently hardcoded in the source) by rendering
   only as much as it can within each time slot.

5. Click on a node (yellow square) with the right mouse button to bring
   the node to the center.  Parts of the graph may disappear during
   these translations because of adaptive rendering.

6. Select Color Scheme->Nontree Link Color->Grey.

7. Select Rendering->Update.

8. Select Color Scheme->Nontree Link Color->Transparent.

9. Select Rendering->Update.

At this point, you should have a display with nodes in yellow, tree links
in green, and nontree links in a cobweb-like transparent grey.  This is
a good color scheme for exploring graphs with nontree links.

Two other features you may wish to try are wobbling and continous
rotations.  To activate wobbling, hold down the control key and briefly
drag with the left mouse button (the location and direction of the drag
don't matter).  The display will wobble after you end the drag and release
the control key.  To stop the wobbling, click anywhere in the window with
the left mouse button.  To activate continous rotations, hold down the
shift key and briefly drag with the left mouse button (the location of the
drag doesn't matter).  After the drag ends, the display will continously
rotate in the direction of the drag and at a velocity roughly proportional
to the drag velocity.  To stop the rotation, click anywhere in the window
with the left mouse button.

As mentioned earlier, Walrus uses an adaptive rendering algorithm that
tries to maintain a given framerate.  You may try out the nonadaptive
rendering algorithm for comparison by de-selecting Rendering->Adaptive
Rendering and then selecting Rendering->Update (the color scheme will
change, and currently can't be overridden in this mode).  The nonadaptive
algorithm can be smoother for small graphs.

See 'guide.txt' in the 'docs' subdirectory for information on additional
commands and menus not covered here.


- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
LICENSE

Copyright 2000-2001 The Regents of the University of California
All Rights Reserved

Permission to use, copy, modify and distribute any part of this
Walrus software package for educational, research and non-profit
purposes, without fee, and without a written agreement is hereby
granted, provided that the above copyright notice, this paragraph
and the following paragraphs appear in all copies.
  
Those desiring to incorporate this into commercial products or use
for commercial purposes should contact the Technology Transfer
Office, University of California, San Diego, 9500 Gilman Drive, La
Jolla, CA 92093-0910, Ph: (858) 534-5815, FAX: (858) 534-7345.

IN NO EVENT SHALL THE UNIVERSITY OF CALIFORNIA BE LIABLE TO ANY
PARTY FOR DIRECT, INDIRECT, SPECIAL, INCIDENTAL, OR CONSEQUENTIAL
DAMAGES, INCLUDING LOST PROFITS, ARISING OUT OF THE USE OF THIS
SOFTWARE, EVEN IF THE UNIVERSITY OF CALIFORNIA HAS BEEN ADVISED OF
THE POSSIBILITY OF SUCH DAMAGE.
 
THE SOFTWARE PROVIDED HEREIN IS ON AN "AS IS" BASIS, AND THE
UNIVERSITY OF CALIFORNIA HAS NO OBLIGATION TO PROVIDE MAINTENANCE,
SUPPORT, UPDATES, ENHANCEMENTS, OR MODIFICATIONS. THE UNIVERSITY
OF CALIFORNIA MAKES NO REPRESENTATIONS AND EXTENDS NO WARRANTIES
OF ANY KIND, EITHER IMPLIED OR EXPRESS, INCLUDING, BUT NOT LIMITED
TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY OR FITNESS FOR A
PARTICULAR PURPOSE, OR THAT THE USE OF THE SOFTWARE WILL NOT INFRINGE
ANY PATENT, TRADEMARK OR OTHER RIGHTS.
 
The Walrus software is developed by the Walrus Team at the
University of California, San Diego under the Cooperative Association
for Internet Data Analysis (CAIDA) Program.  Support for this effort
is provided by NSF grant ANI-9814421, DARPA NGI Contract N66001-98-2-8922,
Sun Microsystems, and CAIDA members.
